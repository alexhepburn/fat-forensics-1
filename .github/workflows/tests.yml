name: Tests
on: [push, pull_request]
jobs:
  test:
    name: Test the package
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        include:
################################## 3.5 ########################################
          - scipy: 1.4.1
            numpy: 1.18.4
            python: 3.5
          - scipy: 1.3.3
            numpy: 1.17.5
            python: 3.5
          - scipy: 1.3.0
            numpy: 1.16.3
            python: 3.5
          - scipy: 1.2.0
            numpy: 1.16.0
            python: 3.5
          - scipy: 1.1.0
            numpy: 1.15.4
            python: 3.5
          - scipy: 1.0.1
            numpy: 1.14.6
            python: 3.5
          - scipy: 0.19.1
            numpy: 1.13.3
            python: 3.5
          - scipy: 0.18.1
            numpy: 1.12.1
            scikit: 0.19.2
            python: 3.5
          # The matplotlib version is fixed to 3.0.0 because since version 3.1
          # it requires at least 1.11 numpy and we support numpy 1.10
          - scipy: 0.18.1
            numpy: 1.10.1
            scikit: 0.20.4
            matplotlib: 3.0.0
            python: 3.5
          - scipy: latest
            numpy: latest
            python: 3.5
################################## 3.6 ########################################
          - scipy: 1.4.1
            numpy: 1.18.4
            python: 3.6
          - scipy: 1.3.3
            numpy: 1.17.5
            python: 3.6
          - scipy: 1.3.0
            numpy: 1.16.3
            python: 3.6
          - scipy: 1.2.0
            numpy: 1.16.0
            python: 3.6
          - scipy: 1.1.0
            numpy: 1.15.4
            python: 3.6
          - scipy: 1.0.1
            numpy: 1.14.6
            matplotlib: 3.2.2
            python: 3.6
          - scipy: 0.19.1
            numpy: 1.13.3
            matplotlib: 3.2.1
            python: 3.6
          - scipy: 0.18.1
            numpy: 1.12.1
            scikit: 0.19.2
            matplotlib: 3.2.0
            python: 3.6
          # The matplotlib version is fixed to 3.0.0 because since version 3.1
          # it requires at least 1.11 numpy and we support numpy 1.10
          - scipy: 0.18.1
            numpy: 1.10.1
            scikit: 0.20.4
            matplotlib: 3.0.0
            python: 3.6
          - scipy: latest
            numpy: latest
            python: 3.6
################################## 3.7 ########################################
#         - scipy: 1.4.1
#           numpy: 1.18.4
#           python: 3.7
#         - scipy: 1.3.3
#           numpy: 1.17.5
#           python: 3.7
#         - scipy: 1.3.0
#           numpy: 1.16.3
#           python: 3.7
#         - scipy: 1.2.0
#           numpy: 1.16.0
#           python: 3.7
#         - scipy: 1.1.0
#           numpy: 1.15.4
#           python: 3.7
#         - scipy: 1.70
#           numpy: 1.21.0
#           python: 3.7
    steps:
    - name: Checkout the code
      uses: actions/checkout@v3
      with:
        fetch-depth: 5
        submodules: false
    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python }}
        cache: 'pip'
    - name: Set extra env -- FATF_TEST_MATPLOTLIB
      if: matrix.matplotlib != ''
      run: echo "FATF_TEST_MATPLOTLIB=${{ matrix.matplotlib }}" >> $GITHUB_ENV
    - name: Set extra env -- FATF_TEST_SKLEARN
      if: matrix.scikit != ''
      run: echo "FATF_TEST_SKLEARN=${{ matrix.scikit }}" >> $GITHUB_ENV
    - name: Set extra env -- GITHUB_PYTHON_VERSION
      run: echo "GITHUB_PYTHON_VERSION=$(python -V | grep -Eo '\d+.\d+.\d+')" >> $GITHUB_ENV
    - name: Install dependencies
      env:
        MAKEFLAGS: '-j 2'
        FATF_TEST_SCIPY: ${{ matrix.scipy }}
        FATF_TEST_NUMPY: ${{ matrix.numpy }}
      run: |
        make install-matplotlib
        make install-scikit-learn
        make dependencies-dev
    - name: Test
      run: |
        make linting-pylint
        make linting-flake8
        make linting-yapf
        make check-types
        make test-with-code-coverage
#       make test-notebooks


  code-coverage:
    name: Publish code coverage
    needs: test
    if: >
      github.event_name == 'push'
      && github.repository == 'fat-forensics/fat-forensics'
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout the code
      uses: actions/checkout@v3
      with:
        fetch-depth: 5
        submodules: false
    - name: Set up Python 3.6
      uses: actions/setup-python@v3
      with:
        python-version: 3.6
        cache: 'pip'
    - name: Install dependencies
      env:
        MAKEFLAGS: '-j 2'
        FATF_TEST_SCIPY: '1.3.0'
        FATF_TEST_NUMPY: '1.16.3'
      run: |
        make install-matplotlib
        make install-scikit-learn
        make dependencies-dev
    - name: Compute code coverage
      run: make test-with-code-coverage
    - name: Deploy code coverage
      env:
        GITHUB_PULL_REQUEST: false
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      run: make deploy-code-coverage


  build-n-release:
    name: Build and publish Python 🐍 distributions 📦 to PyPI and GitHub
    needs: test
    if: >
      github.event_name == 'push'
      && github.repository == 'fat-forensics/fat-forensics'
      && startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout the code
      uses: actions/checkout@v3
      with:
        fetch-depth: 5
        submodules: false
    - name: Set up Python 3.6
      uses: actions/setup-python@v3
      with:
        python-version: 3.6
        cache: 'pip'
    - name: Install dependencies
      env:
        MAKEFLAGS: '-j 2'
        FATF_TEST_SCIPY: '1.3.0'
        FATF_TEST_NUMPY: '1.16.3'
      run: |
        make install-matplotlib
        make install-scikit-learn
        make dependencies-dev
        make install-sans-dep
    - name: Set env
      run: echo "GITHUB_TAG=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV
    - name: Validate PyPI version
      run: ./build_tools/pypi/version-validation.sh
    - name: Build a binary wheel and a source tarball distributions 📦
      run: make build
    - name: Publish distribution 📦 to PyPI 🚀
      if: startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
    - name: 📦 Create GitHub Release 🚀
      if: startsWith(github.ref, 'refs/tags')
      uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        prerelease: false
        title: "FAT-Forensics ${GITHUB_TAG}"
        files: dist/*
